package pages

import "dwelr/models"
import "dwelr/views/components"
import "fmt"
import "strconv"

templ Results(isLoggedIn bool, user models.User, query string, listings []models.Listing, pageData models.Pagination) {
	<!DOCTYPE html>
	<html lang="en" class="scroll-smooth">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<title>Dwelr - Hassle-Free Rentals</title>
			<link href="/views/css/output.css" rel="stylesheet"/>
			<link href="/views/css/styles.css" rel="stylesheet"/>
			<script src="https://cdn.tailwindcss.com"/>
			<script src="https://unpkg.com/htmx.org@1.9.11"></script>
			/* <script src="https://unpkg.com/htmx.org@1.9.11" integrity="sha384-0gxUXCCR8yv9FM2b+U3FDbsKthCI66oH5IA9fHppQq9DDMHuMauqq1ZHBpJxQ0J0" crossorigin="anonymous"/> */
			<script src="https://kit.fontawesome.com/84325e05c5.js" crossorigin="anonymous"/>
		</head>
		<body class="flex flex-col bg-image">
			<header>
				if isLoggedIn {
					@components.UserNavbar(user)
				} else {
					@components.GuestNavbar()
				}
			</header>
			<div class="py-8 px-14 flex max-w-6xl flex-col min-h-screen mt-20 mx-auto">
				<div>
					@components.SearchBar()
				</div>
				<div class="flex-grow">
					<h2 class="text-2xl mt-20"><span class="font-bold">Results for:</span> { query }</h2>
					<div class="">
						for _, listing := range listings {
							@components.ListingCard(listing)
						}
					</div>
				</div>
				<div class="my-14 p-2 mx-auto">
					// Previous Pages
					if pageData.CurrentPage > 1 {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/%d?search=%s", pageData.PrevPage, query)) }>Previous</a>
					} else {
						<span class="bg-white cursor-default border-2 border-gray rounded p-2 w-24 mx-0.5" >Previous</span>
					}
					// First Page
					if pageData.CurrentPage > 3 {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/1?search=%s", query)) }>{ strconv.Itoa(1) }</a>
					}
					// ...
					if pageData.CurrentPage > 4 {
						<span class="bg-white cursor-default border-2 border-gray rounded p-2 w-24 mx-0.5" >...</span>
					}
					// Two Below
					if pageData.CurrentPage > 2 {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/%d?search=%s", pageData.TwoBelow, query)) }>{ strconv.Itoa(pageData.TwoBelow) }</a>
					}
					// One Below
					if pageData.CurrentPage > 1 {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/%d?search=%s", pageData.PrevPage, query)) }>{ strconv.Itoa(pageData.PrevPage) }</a>
					}
					// Current Page
					<span class="bg-white cursor-default border-2 border-gray rounded p-2 w-10 mx-0.5">{ strconv.Itoa(pageData.CurrentPage) }</span>
					// Next Pages
					// One After
					if pageData.CurrentPage < pageData.TotalPages {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/%d?search=%s", pageData.NextPage, query)) }>{ strconv.Itoa(pageData.NextPage) }</a>
					}
					// Two After
					if pageData.TwoAfter <= pageData.TotalPages {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/%d?search=%s", pageData.TwoAfter, query)) }>{ strconv.Itoa(pageData.TwoAfter) }</a>
					}
					// ...
					if pageData.ThreeAfter < pageData.TotalPages {
						<span class="bg-white cursor-default border-2 border-gray rounded p-2 w-24 mx-0.5" >...</span>
					}
					// Last Page
					if pageData.TwoAfter < pageData.TotalPages {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/%d?search=%s", pageData.TotalPages, query)) }>{ strconv.Itoa(pageData.TotalPages) }</a>
					}
					// Next

					if pageData.CurrentPage < pageData.TotalPages {
						<a class="bg-white border-2 border-orange-400 rounded p-2 w-24 mx-0.5 hover:bg-orange-400" href={ templ.URL(fmt.Sprintf("/search/page/%d?search=%s", pageData.NextPage, query)) }>Next</a>
					} else {
						<span class="bg-white cursor-default border-2 border-gray rounded p-2 w-24 mx-0.5" >Next</span>
					}
				</div>
			</div>
			// Footer component
			@components.Footer()
			<script src="/views/scripts/scripts.js"/>
		</body>
	</html>
}
